"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/calculations.ts":
/*!*****************************!*\
  !*** ./lib/calculations.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CONSTANTS: function() { return /* binding */ CONSTANTS; },\n/* harmony export */   POLICY_OPTIONS: function() { return /* binding */ POLICY_OPTIONS; },\n/* harmony export */   calculateAspirationBand: function() { return /* binding */ calculateAspirationBand; },\n/* harmony export */   calculateEmployerCeiling: function() { return /* binding */ calculateEmployerCeiling; },\n/* harmony export */   calculateNashSolution: function() { return /* binding */ calculateNashSolution; },\n/* harmony export */   calculateNegotiationPlan: function() { return /* binding */ calculateNegotiationPlan; },\n/* harmony export */   calculateUtilityFloors: function() { return /* binding */ calculateUtilityFloors; },\n/* harmony export */   calculateWorkerAnchor: function() { return /* binding */ calculateWorkerAnchor; },\n/* harmony export */   calculateWorkerWalkAway: function() { return /* binding */ calculateWorkerWalkAway; },\n/* harmony export */   calculateZOPA: function() { return /* binding */ calculateZOPA; },\n/* harmony export */   generateChartData: function() { return /* binding */ generateChartData; },\n/* harmony export */   utilityEmployer: function() { return /* binding */ utilityEmployer; },\n/* harmony export */   utilityWorker: function() { return /* binding */ utilityWorker; }\n/* harmony export */ });\n// 常量定义\nconst CONSTANTS = {\n    base: 2500,\n    w_E_ideal: 2500,\n    w_E_max: 8000,\n    w_W_min: 3500,\n    w_W_ideal: 8000,\n    feasible_min: 3500,\n    feasible_max: 8000,\n    grid_step: 50,\n    employer_fallback_cost_money: 6000,\n    worker_fallback_income_money: 2490\n};\n// 政策情景映射\nconst POLICY_OPTIONS = [\n    {\n        label: \"一般保护（市场主导）\",\n        value: \"market\",\n        beta: 0.48\n    },\n    {\n        label: \"中度保护（偏向工人）\",\n        value: \"moderate\",\n        beta: 0.42\n    },\n    {\n        label: \"较强保护（集体谈判）\",\n        value: \"strong\",\n        beta: 0.35\n    },\n    {\n        label: \"强保护（强工会/强监管）\",\n        value: \"strongest\",\n        beta: 0.28\n    }\n];\n// 夹逼函数\nfunction clamp(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n// 四舍五入到最近的步长\nfunction roundToStep(value, step) {\n    return Math.round(value / step) * step;\n}\n// 计算Plan B映射的效用底线\nfunction calculateUtilityFloors(negotiationBreakdownCost, localMinimumWage, workerIdeal, workerMinimum) {\n    const { w_E_ideal } = CONSTANTS;\n    // 使用动态参数或默认值\n    const w_E_max = negotiationBreakdownCost || CONSTANTS.w_E_max;\n    const employer_fallback_cost = negotiationBreakdownCost || CONSTANTS.employer_fallback_cost_money;\n    const worker_fallback_income = localMinimumWage || CONSTANTS.worker_fallback_income_money;\n    const w_W_min = workerMinimum || CONSTANTS.w_W_min;\n    const w_W_ideal = workerIdeal || CONSTANTS.w_W_ideal;\n    const uE0_raw = 0.1 + 0.9 * (w_E_max - employer_fallback_cost) / (w_E_max - w_E_ideal);\n    const uW0_raw = 0.1 + 0.9 * (worker_fallback_income - w_W_min) / (w_W_ideal - w_W_min);\n    const u_E0 = clamp(uE0_raw, 0.1, 0.9);\n    const u_W0 = clamp(uW0_raw, 0.1, 0.9);\n    return {\n        u_E0,\n        u_W0\n    };\n}\n// 雇主效用函数\nfunction utilityEmployer(w, negotiationBreakdownCost) {\n    const { w_E_ideal } = CONSTANTS;\n    const w_E_max = negotiationBreakdownCost || CONSTANTS.w_E_max;\n    return clamp(0.1 + 0.9 * (w_E_max - w) / (w_E_max - w_E_ideal), 0, 1);\n}\n// 工人效用函数\nfunction utilityWorker(w, workerIdeal, workerMinimum) {\n    const w_W_min = workerMinimum || CONSTANTS.w_W_min;\n    const w_W_ideal = workerIdeal || CONSTANTS.w_W_ideal;\n    return clamp(0.1 + 0.9 * (w - w_W_min) / (w_W_ideal - w_W_min), 0, 1);\n}\n// Nash谈判解\nfunction calculateNashSolution(beta, u_E0, u_W0, negotiationBreakdownCost, workerIdeal, workerMinimum) {\n    const { feasible_min, feasible_max, grid_step } = CONSTANTS;\n    let bestWage = feasible_min;\n    let maxObjective = -Infinity;\n    let hasValidSolution = false;\n    for(let w = feasible_min; w <= feasible_max; w += grid_step){\n        const u_E = utilityEmployer(w, negotiationBreakdownCost);\n        const u_W = utilityWorker(w, workerIdeal, workerMinimum);\n        // 跳过无效区域\n        if (u_E <= u_E0 || u_W <= u_W0) continue;\n        hasValidSolution = true;\n        const objective = Math.pow(u_E - u_E0, beta) * Math.pow(u_W - u_W0, 1 - beta);\n        if (objective > maxObjective) {\n            maxObjective = objective;\n            bestWage = w;\n        } else if (objective === maxObjective) {\n            // 如果目标函数相等，选择更接近区间中点的\n            const midpoint = (feasible_min + feasible_max) / 2;\n            if (Math.abs(w - midpoint) < Math.abs(bestWage - midpoint)) {\n                bestWage = w;\n            }\n        }\n    }\n    // 如果没有找到有效解，返回null\n    if (!hasValidSolution) {\n        return null;\n    }\n    return bestWage;\n}\n// 计算工人底线工资\nfunction calculateWorkerWalkAway(u_W0, workerIdeal, workerMinimum) {\n    const { feasible_min, feasible_max, grid_step } = CONSTANTS;\n    const w_W_min = workerMinimum || CONSTANTS.w_W_min;\n    const w_W_ideal = workerIdeal || CONSTANTS.w_W_ideal;\n    const w_WA_raw = w_W_min + (u_W0 - 0.1) / 0.9 * (w_W_ideal - w_W_min);\n    const w_WA_clamped = clamp(w_WA_raw, feasible_min, feasible_max);\n    return roundToStep(w_WA_clamped, grid_step);\n}\n// 计算雇主无差异上限\nfunction calculateEmployerCeiling(u_E0, negotiationBreakdownCost) {\n    const { w_E_ideal, feasible_min, grid_step } = CONSTANTS;\n    const w_E_max = negotiationBreakdownCost || CONSTANTS.w_E_max;\n    const w_EMP_raw = w_E_max - (u_E0 - 0.1) / 0.9 * (w_E_max - w_E_ideal);\n    // 使用动态上限，不限制在固定的feasible_max\n    const dynamicMax = Math.max(CONSTANTS.feasible_max, w_E_max);\n    const w_EMP_clamped = clamp(w_EMP_raw, feasible_min, dynamicMax);\n    return roundToStep(w_EMP_clamped, grid_step);\n}\n// 计算ZOPA\nfunction calculateZOPA(w_WA, w_EMP) {\n    const { feasible_min, feasible_max } = CONSTANTS;\n    const zopa_min = Math.max(feasible_min, w_WA);\n    const zopa_max = Math.min(feasible_max, w_EMP);\n    return {\n        min: zopa_min,\n        max: zopa_max,\n        valid: zopa_min <= zopa_max\n    };\n}\n// 计算工人锚点价格\nfunction calculateWorkerAnchor(w_nash, w_EMP) {\n    const { grid_step } = CONSTANTS;\n    const w_anchor_raw = Math.min(w_nash + 0.08 * (w_EMP - w_nash), w_EMP);\n    return roundToStep(w_anchor_raw, grid_step);\n}\n// 计算期望区间\nfunction calculateAspirationBand(w_nash, w_WA, w_EMP) {\n    const { grid_step } = CONSTANTS;\n    const w_top_raw = Math.min(w_nash + 0.15 * (w_EMP - w_WA), w_EMP);\n    const w_floor_raw = Math.max(w_WA, w_nash - 0.05 * (w_nash - w_WA));\n    return {\n        top: roundToStep(w_top_raw, grid_step),\n        floor: roundToStep(w_floor_raw, grid_step)\n    };\n}\n// 主计算函数\nfunction calculateNegotiationPlan(policyValue, customAsk, negotiationBreakdownCost, localMinimumWage, workerIdeal, workerMinimum) {\n    const policy = POLICY_OPTIONS.find((p)=>p.value === policyValue) || POLICY_OPTIONS[2];\n    const beta = policy.beta;\n    const { u_E0, u_W0 } = calculateUtilityFloors(negotiationBreakdownCost, localMinimumWage, workerIdeal, workerMinimum);\n    const w_WA = calculateWorkerWalkAway(u_W0, workerIdeal, workerMinimum);\n    const w_EMP = calculateEmployerCeiling(u_E0, negotiationBreakdownCost);\n    const zopa = calculateZOPA(w_WA, w_EMP);\n    const w_nash = calculateNashSolution(beta, u_E0, u_W0, negotiationBreakdownCost, workerIdeal, workerMinimum);\n    // 检查是否有Nash解\n    if (w_nash === null) {\n        return {\n            policy,\n            beta,\n            u_E0,\n            u_W0,\n            w_nash: null,\n            w_anchor: null,\n            w_WA,\n            w_EMP,\n            zopa,\n            aspirationBand: null,\n            coefficients: {\n                c_nash: null,\n                c_anchor: null,\n                c_ask: customAsk ? customAsk / CONSTANTS.base : undefined\n            },\n            customAsk,\n            hasValidSolution: false,\n            errorMessage: \"工资期望过高，雇主效用不足，Nash解不存在\"\n        };\n    }\n    const w_anchor = calculateWorkerAnchor(w_nash, w_EMP);\n    const aspirationBand = calculateAspirationBand(w_nash, w_WA, w_EMP);\n    // 转换为加班系数\n    const c_nash = w_nash / CONSTANTS.base;\n    const c_anchor = w_anchor / CONSTANTS.base;\n    const c_ask = customAsk ? customAsk / CONSTANTS.base : undefined;\n    return {\n        policy,\n        beta,\n        u_E0,\n        u_W0,\n        w_nash,\n        w_anchor,\n        w_WA,\n        w_EMP,\n        zopa,\n        aspirationBand,\n        coefficients: {\n            c_nash,\n            c_anchor,\n            c_ask\n        },\n        customAsk,\n        hasValidSolution: true\n    };\n}\n// 生成图表数据\nfunction generateChartData(u_E0, u_W0, negotiationBreakdownCost, workerIdeal, workerMinimum) {\n    const { feasible_min, feasible_max, grid_step } = CONSTANTS;\n    const data = [];\n    for(let w = feasible_min; w <= feasible_max; w += grid_step){\n        const u_E = utilityEmployer(w, negotiationBreakdownCost);\n        const u_W = utilityWorker(w, workerIdeal, workerMinimum);\n        data.push({\n            wage: w,\n            u_E,\n            u_W,\n            nashProduct: u_E > u_E0 && u_W > u_W0 ? (u_E - u_E0) * (u_W - u_W0) : 0\n        });\n    }\n    return data;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/calculations.ts\n"));

/***/ })

});